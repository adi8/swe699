package edu.gmu.swe699.dynamodb.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import java.util.List;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@NoArgsConstructor
@DynamoDBTable(tableName = "Order")
public class Order {

  @DynamoDBHashKey(attributeName = "Id")
  private String id;

  @DynamoDBIndexHashKey(globalSecondaryIndexName = "RestaurantIdx", attributeName = "RestaurantId")
  private String restaurantId;

  @DynamoDBAttribute(attributeName = "BaseAmount")
  private double baseAmount;

  @DynamoDBAttribute(attributeName = "Amount")
  private double amount;

  @DynamoDBAttribute(attributeName = "Tax")
  private double tax;

  @DynamoDBAttribute(attributeName = "status")
  private String status;

  @DynamoDBAttribute(attributeName = "OrderMenuItems")
  private List<OrderMenuItem> orderMenuItems;

  @DynamoDBAttribute(attributeName = "DeliveryAddress")
  private String deliveryAddr;

  @DynamoDBAttribute(attributeName = "DeliveryInstructions")
  private String deliveryInst;

  public Order(String id, String restaurantId) {
    this.id = id;
    this.restaurantId = restaurantId;
  }

  public Order(String id, String restaurantId, List<OrderMenuItem> orderMenuItems) {
    this(id, restaurantId);
    this.orderMenuItems = orderMenuItems;
  }

  public Order(String id, String restaurantId, double baseAmount, double amount, float tax,
      String status, List<OrderMenuItem> orderMenuItems) {
    this(id, restaurantId, orderMenuItems);
    this.status = status;
    this.baseAmount = baseAmount;
    this.tax = tax;
    this.amount = amount;
  }

  @Override
  public String toString() {
    StringBuilder orderMenuItemsStr = new StringBuilder();
    orderMenuItemsStr.append("[ ");
    if (orderMenuItems != null && !orderMenuItems.isEmpty()) {
      for (OrderMenuItem orderMenuItem : orderMenuItems) {
        orderMenuItemsStr.append(orderMenuItem.toString());
        orderMenuItemsStr.append(" ");
      }
    }
    orderMenuItemsStr.append("]");

    return String.format(
        "Order[id=%s, restaurantId=%s, baseAmount='%.2f', tax='%.2f', amount='%.2f', orderMenuItems='%s', deliveryAddress='%s', deliveryInst='%s'",
        id, restaurantId, baseAmount, tax, amount, orderMenuItemsStr.toString(), deliveryAddr,
        deliveryInst);
  }
}
